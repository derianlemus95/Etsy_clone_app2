{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deven\\\\OneDrive\\\\Desktop\\\\Lab2\\\\Frontend\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst jwt_decode = require(\"jwt-decode\"); //Define a Login Component\n\n\nclass Login extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constructor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.emailChangeHandler = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      //prevent page from refresh\n      e.preventDefault();\n      const data = {\n        email: this.state.email,\n        password: this.state.password\n      }; //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post(\"http://localhost:3001/auth/login\", data).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            token: response.data,\n            authFlag: false\n          });\n        } else {\n          this.setState({\n            authFlag: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      authFlag: true,\n      token: \"\",\n      message: \"\"\n    }; //Bind the handlers to this class\n\n    this.emailChangeHandler = this.emailChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    //redirect based on successful login\n    let redirectVar = null;\n\n    if (this.state.token.length > 0) {\n      localStorage.setItem(\"token\", this.state.token);\n      var decoded = jwt_decode(this.state.token.split(\" \")[1]);\n      localStorage.setItem(\"user_id\", decoded._id);\n      localStorage.setItem(\"email\", decoded.email);\n      redirectVar = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this);\n    }\n\n    let {\n      authFlag\n    } = this.state;\n    let invalidID;\n\n    if (authFlag) {\n      invalidID = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorClass\",\n          style: {\n            color: \"red\"\n          },\n          children: \"Error: Email or password is incorrect. Please enter correct email and password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [redirectVar, /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"login-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"main-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"LOGIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please enter your email and password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), invalidID, /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.submitLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"#ff0000\"\n                },\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.emailChangeHandler,\n                  type: \"text\",\n                  class: \"form-control\",\n                  required: true,\n                  name: \"email\",\n                  placeholder: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this.passwordChangeHandler,\n                  type: \"password\",\n                  class: \"form-control\",\n                  required: true,\n                  name: \"password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                class: \"btn btn-primary\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export Login Component\n\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/deven/OneDrive/Desktop/Lab2/Frontend/src/components/Login/Login.js"],"names":["React","Component","axios","Redirect","jwt_decode","require","Login","constructor","props","emailChangeHandler","e","setState","email","target","value","passwordChangeHandler","password","submitLogin","preventDefault","data","state","defaults","withCredentials","post","then","response","status","token","authFlag","message","bind","componentWillMount","render","redirectVar","length","localStorage","setItem","decoded","split","_id","invalidID","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B,C,CAEA;;;AACA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5B;AACAM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN,EAFiB,CAGjB;;AAHiB,SAuBnBC,kBAvBmB,GAuBGC,CAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AADJ,OAAd;AAGD,KA3BkB;;AAAA,SA6BnBC,qBA7BmB,GA6BML,CAAD,IAAO;AAC7B,WAAKC,QAAL,CAAc;AACZK,QAAAA,QAAQ,EAAEN,CAAC,CAACG,MAAF,CAASC;AADP,OAAd;AAGD,KAjCkB;;AAAA,SAmCnBG,WAnCmB,GAmCJP,CAAD,IAAO;AACnB;AACAA,MAAAA,CAAC,CAACQ,cAAF;AACA,YAAMC,IAAI,GAAG;AACXP,QAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,KADP;AAEXI,QAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ;AAFV,OAAb,CAHmB,CAOnB;;AACAd,MAAAA,KAAK,CAACmB,QAAN,CAAeC,eAAf,GAAiC,IAAjC,CARmB,CASnB;;AACApB,MAAAA,KAAK,CAACqB,IAAN,CAAW,kCAAX,EAA+CJ,IAA/C,EAAqDK,IAArD,CAA2DC,QAAD,IAAc;AACtE,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAKf,QAAL,CAAc;AACZgB,YAAAA,KAAK,EAAEF,QAAQ,CAACN,IADJ;AAEZS,YAAAA,QAAQ,EAAE;AAFE,WAAd;AAID,SALD,MAKO;AACL,eAAKjB,QAAL,CAAc;AACZiB,YAAAA,QAAQ,EAAE;AADE,WAAd;AAGD;AACF,OAXD;AAYD,KAzDkB;;AAIjB,SAAKR,KAAL,GAAa;AACXR,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,QAAQ,EAAE,EAFC;AAGXY,MAAAA,QAAQ,EAAE,IAHC;AAIXD,MAAAA,KAAK,EAAE,EAJI;AAKXE,MAAAA,OAAO,EAAE;AALE,KAAb,CAJiB,CAWjB;;AACA,SAAKpB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBqB,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKf,qBAAL,GAA6B,KAAKA,qBAAL,CAA2Be,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKb,WAAL,GAAmB,KAAKA,WAAL,CAAiBa,IAAjB,CAAsB,IAAtB,CAAnB;AACD,GAjB2B,CAkB5B;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB,SAAKpB,QAAL,CAAc;AACZiB,MAAAA,QAAQ,EAAE;AADE,KAAd;AAGD,GAvB2B,CAwB5B;;;AAqCAI,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAI,KAAKb,KAAL,CAAWO,KAAX,CAAiBO,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,KAAKhB,KAAL,CAAWO,KAAzC;AAEA,UAAIU,OAAO,GAAGjC,UAAU,CAAC,KAAKgB,KAAL,CAAWO,KAAX,CAAiBW,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAD,CAAxB;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,OAAO,CAACE,GAAxC;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,OAAO,CAACzB,KAAtC;AAEAqB,MAAAA,WAAW,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAd;AACD;;AACD,QAAI;AAAEL,MAAAA;AAAF,QAAe,KAAKR,KAAxB;AACA,QAAIoB,SAAJ;;AACA,QAAIZ,QAAJ,EAAc;AACZY,MAAAA,SAAS,gBACP;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;;AACD,wBACE;AAAA,iBACGR,WADH,eAEE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,YAAX;AAAA,iCACE;AAAK,YAAA,KAAK,EAAC,UAAX;AAAA,oCACE;AAAK,cAAA,KAAK,EAAC,OAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKGO,SALH,eAME;AAAM,cAAA,QAAQ,EAAE,KAAKvB,WAArB;AAAA,sCACE;AAAK,gBAAA,KAAK,EAAE;AAAEwB,kBAAAA,KAAK,EAAE;AAAT,iBAAZ;AAAA,0BAAmC,KAAKrB,KAAL,CAAWS;AAA9C;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,KAAK,EAAC,YAAX;AAAA,uCACE;AACE,kBAAA,QAAQ,EAAE,KAAKpB,kBADjB;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,EAAC,cAHR;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,IAAI,EAAC,OALP;AAME,kBAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAYE;AAAK,gBAAA,KAAK,EAAC,YAAX;AAAA,uCACE;AACE,kBAAA,QAAQ,EAAE,KAAKM,qBADjB;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,KAAK,EAAC,cAHR;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAZF,eAsBE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0CD;;AA/H2B,C,CAiI9B;;;AACA,eAAeT,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nconst jwt_decode = require(\"jwt-decode\");\r\n\r\n//Define a Login Component\r\nclass Login extends Component {\r\n  //call the constructor method\r\n  constructor(props) {\r\n    //Call the constructor of Super class i.e The Component\r\n    super(props);\r\n    //maintain the state required for this component\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      authFlag: true,\r\n      token: \"\",\r\n      message: \"\",\r\n    };\r\n    //Bind the handlers to this class\r\n    this.emailChangeHandler = this.emailChangeHandler.bind(this);\r\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n    this.submitLogin = this.submitLogin.bind(this);\r\n  }\r\n  //Call the Will Mount to set the auth Flag to false\r\n  componentWillMount() {\r\n    this.setState({\r\n      authFlag: false,\r\n    });\r\n  }\r\n  //username change handler to update state variable with the text entered by the user\r\n  emailChangeHandler = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n  //password change handler to update state variable with the text entered by the user\r\n  passwordChangeHandler = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n  //submit Login handler to send a request to the node backend\r\n  submitLogin = (e) => {\r\n    //prevent page from refresh\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    //set the with credentials to true\r\n    axios.defaults.withCredentials = true;\r\n    //make a post request with the user data\r\n    axios.post(\"http://localhost:3001/auth/login\", data).then((response) => {\r\n      if (response.status === 200) {\r\n        this.setState({\r\n          token: response.data,\r\n          authFlag: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          authFlag: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //redirect based on successful login\r\n    let redirectVar = null;\r\n    if (this.state.token.length > 0) {\r\n      localStorage.setItem(\"token\", this.state.token);\r\n\r\n      var decoded = jwt_decode(this.state.token.split(\" \")[1]);\r\n      localStorage.setItem(\"user_id\", decoded._id);\r\n      localStorage.setItem(\"email\", decoded.email);\r\n\r\n      redirectVar = <Redirect to=\"/home\" />;\r\n    }\r\n    let { authFlag } = this.state;\r\n    let invalidID;\r\n    if (authFlag) {\r\n      invalidID = (\r\n        <div>\r\n          <span className=\"errorClass\" style={{ color: \"red\" }}>\r\n            Error: Email or password is incorrect. Please enter correct email\r\n            and password\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {redirectVar}\r\n        <div class=\"container\">\r\n          <div class=\"login-form\">\r\n            <div class=\"main-div\">\r\n              <div class=\"panel\">\r\n                <h2>LOGIN</h2>\r\n                <p>Please enter your email and password</p>\r\n              </div>\r\n              {invalidID}\r\n              <form onSubmit={this.submitLogin}>\r\n                <div style={{ color: \"#ff0000\" }}>{this.state.message}</div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    onChange={this.emailChangeHandler}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    required\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    onChange={this.passwordChangeHandler}\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    required\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">\r\n                  Login\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//export Login Component\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}